<?php

/**
 * @file
 * Contains opigno_search.module.
 */

use Drupal\Core\Form\FormState;
use Drupal\Core\Form\FormStateInterface;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;
use Drupal\views\Views;

/**
 * Get exposed filterers from search view.
 */
function opigno_search_block_form() {
  $view = Views::getView('search_content');
  if (!empty($view)) {
    $view->initHandlers();
    $form_state = new FormState();
    $form_state->setFormState([
      'view' => $view,
      'display' => [
        'id' => 'page_1',
      ],
      'exposed_form_plugin' => $view->display_handler->getPlugin('exposed_form'),
      'method' => 'get',
      'rerender' => TRUE,
      'no_redirect' => FALSE,
      'always_process' => TRUE,
    ]);

    $form = \Drupal::formBuilder()->buildForm('Drupal\views\Form\ViewsExposedForm', $form_state);
    $form['#id'] = $form['#id'] . '_opigon';

    if (isset($form['keys'])) {
      $form['keys']['#title'] = t('Search keys');
    }

    $form['actions']['submit']['#value'] = t('Submit search keys');

    return \Drupal::service('renderer')->render($form);
  }
  else {
    return 'Could not find view "Search Content"';
  }
}

/**
 * Implements hook_form_alter().
 */
function opigno_search_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  switch ($form['#id']) {
    case 'views-exposed-form-search-content-page-1':
      unset($form['#info']['filter-search_api_fulltext']['label']);
      $form['keys']['#type'] = 'search';
      $form['keys']['#title'] = t('Search');
      $form['keys']['#title_display'] = 'invisible';
      $form['#attached']['library'][] = 'opigno_search/search_form';
      $form['#method'] = 'get';
      break;
  }
}

/**
 * Implements hook_views_query_alter().
 */
function opigno_search_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  // Fix admin/people views first and last name search.
  if ($view->id() === 'user_admin_people') {
    $exposed_data = $view->getExposedInput();
    if (isset($exposed_data['user'])
      && preg_match('/\s/', $exposed_data['user'])
      && !str_contains($exposed_data['user'], '@')) {
      $user_data = $exposed_data['user'];
      $array_of_name = explode(' ', $user_data);

      $query->setWhereGroup('AND', 2);
      $i = 0;
      foreach ($array_of_name as $part_of_name) {
        $query->addWhere(2, "CONCAT_WS(' ', user__field_first_name.field_first_name_value, ' ', user__field_last_name.field_last_name_value) LIKE :views_combine_" . $i, [':views_combine_' . $i => '%' . $part_of_name . '%'], "formula");
        $i++;
      }
      $where = $query->where;
      unset($where[1]['conditions'][0]);
      $query->where = $where;
    }
  }
}
